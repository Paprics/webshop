version: '3.5'

services:
  postgres_db:
    container_name: web_store_db
    image: postgres:17.5
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    container_name: web_store
    build:
      context: ./
      dockerfile: Dockerfile
    working_dir: /app
#    ports:
#      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./commands:/app/commands
      - static_content:/app/src/static
      - media_content:/app/src/media
    env_file:
      - .env
    depends_on:
      - postgres_db
    command: ["sh", "/app/commands/start_server_${MODE}.sh"]

  pg_admin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: on-failure
    env_file:
      - .env
    ports:
      - "5050:80"
    volumes:
      - pg_admin:/var/lib/pgadmin
    depends_on:
      - postgres_db

  nginx:
    image: nginx:1.19
    volumes:
      - ./src/static:/app/src/static
      - ./src/media:/app/src/media
      - ./nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    depends_on:
      - backend

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis
    env_file:
      - .env
    restart: on-failure
    depends_on:
      - backend

  celery:
    working_dir: /web_store
    build: ./
    container_name: celery-container
    command:
      - ./commands/start_celery.sh
    restart: on-failure
    volumes:
      - ./src:/web_store
      - ./commands:/web_store/commands
    env_file:
      - .env
    depends_on:
      - backend
      - redis

  flower:
    working_dir: /web_store
    build: ./
    container_name: flower-container
    volumes:
      - ./src:/web_store
    env_file:
      - .env
    command: celery -A config flower --broker=redis://redis

    ports:
      - 5556:5555
    depends_on:
      - celery

  redis_commander:
    image: rediscommander/redis-commander:latest
    container_name: redis_commander
    restart: always
    env_file:
      - .env
    environment:
      - REDIS_HOSTS=main:redis:6379  # <<< вот это главное!
    ports:
      - "8081:8081"
    depends_on:
      - redis

volumes:
  postgres_data: {}
  pg_admin: {}
  mongo_data: {}
  static_content: {}
  media_content: {}